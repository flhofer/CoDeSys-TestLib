

(* @NESTEDCOMMENTS := 'Yes' *)
(* @PATH := '' *)
(* @OBJECTFLAGS := '0, 8' *)
(* @SYMFILEFLAGS := '2048' *)
PROGRAM TestTTCon7
VAR_OUTPUT
	Pass: BOOL;
END_VAR
VAR CONSTANT
	NoOfTests : USINT := 6;
	NoOfInputs: USINT := 6;

	(* ------------ Test input ----------- *)
	(* By setting _delayIsTime to false, base time element is running cycles *)
	(* These are constants. You can also declare normal vars in case of in_out parameters *)
	(* the memory footpint will not change *)

	Tests_Values : ARRAY [1..NoOfTests,1..NoOfInputs] OF Test7_Vars :=

				(* Test 1 *)
				(testtime:= S_PRESSURE_ERROR_COUNTER_LIMIT_n1, a102 := 4999, a103 := S_PRESSURE_CHECK_TOLERANCE_5000, velocity := S_PRESSURE_CHECK_MIN_VELOCITY_1, foot_throttle_scaled := 0,	cruise_control_active := FALSE,	drive_approval_fw := TRUE,	drive_approval_bw := FALSE, current_motor := S_PRESSURE_CHECK_MIN_CURRENT_1, error := S_ERROR_NO_ERROR),
				(testtime:= 1, a102 := 5000, a103 := S_PRESSURE_CHECK_TOLERANCE_5000, velocity := S_PRESSURE_CHECK_MIN_VELOCITY_1, foot_throttle_scaled := 0,	cruise_control_active := FALSE,	drive_approval_fw := TRUE,	drive_approval_bw := FALSE, current_motor := S_PRESSURE_CHECK_MIN_CURRENT_1, error := S_ERROR_NO_ERROR),
				(testtime:= S_PRESSURE_ERROR_COUNTER_LIMIT_n1, a102 := 4999, a103 := S_PRESSURE_CHECK_TOLERANCE_5000, velocity := S_PRESSURE_CHECK_MIN_VELOCITY_1, foot_throttle_scaled := 0,	cruise_control_active := FALSE,	drive_approval_fw := TRUE,	drive_approval_bw := FALSE, current_motor := S_PRESSURE_CHECK_MIN_CURRENT_1, error := S_ERROR_NO_ERROR),
				(testtime:= 1, a102 := 4999, a103 := S_PRESSURE_CHECK_TOLERANCE_5000, velocity := S_PRESSURE_CHECK_MIN_VELOCITY_1, foot_throttle_scaled := 0,	cruise_control_active := FALSE,	drive_approval_fw := TRUE,	drive_approval_bw := FALSE, current_motor := S_PRESSURE_CHECK_MIN_CURRENT_1, error := S_ERROR_PRESSURE_CHECK),
				(testtime:= 1, a102 := 5000, a103 := S_PRESSURE_CHECK_TOLERANCE_5000, velocity := S_PRESSURE_CHECK_MIN_VELOCITY_1, foot_throttle_scaled := 0,	cruise_control_active := FALSE,	drive_approval_fw := TRUE,	drive_approval_bw := FALSE, current_motor := S_PRESSURE_CHECK_MIN_CURRENT_1, error := S_ERROR_PRESSURE_CHECK),
				(testtime:= 0),

				(* Test 2 *)
				(testtime:= S_PRESSURE_ERROR_COUNTER_LIMIT, a102 := 4500, a103 := 6000, velocity := S_PRESSURE_CHECK_MIN_VELOCITY_1, foot_throttle_scaled := 1000,	cruise_control_active := FALSE,	drive_approval_fw := FALSE,	drive_approval_bw := TRUE, current_motor := S_PRESSURE_CHECK_MIN_CURRENT_1, error := S_ERROR_NO_ERROR),
				5((testtime:= 0)),

				(* Test 3 *)
				(testtime:= S_PRESSURE_ERROR_COUNTER_LIMIT, a102 := 7000, a103 := 4500, velocity := -S_PRESSURE_CHECK_MIN_VELOCITY_1, foot_throttle_scaled := 1000,	cruise_control_active := FALSE,	drive_approval_fw := TRUE,	drive_approval_bw := FALSE, current_motor := S_PRESSURE_CHECK_MIN_CURRENT_1, error := S_ERROR_NO_ERROR),
				5((testtime:= 0)),

				(* Test 4 *)
				(testtime:= S_PRESSURE_ERROR_COUNTER_LIMIT, a102 := 4200, a103 := S_PRESSURE_CHECK_TOLERANCE_4201, velocity := S_PRESSURE_CHECK_MIN_VELOCITY_1, foot_throttle_scaled := 0, cruise_control_active := FALSE,	drive_approval_fw := TRUE,	drive_approval_bw := FALSE, current_motor := S_PRESSURE_CHECK_MIN_CURRENT_1, error := S_ERROR_NO_ERROR),
				5((testtime:= 0)),

				(* Test 5 *)
				(testtime:= S_PRESSURE_ERROR_COUNTER_LIMIT, a102 := S_PRESSURE_CHECK_TOLERANCE_4201, a103 := 4200, velocity := -S_PRESSURE_CHECK_MIN_VELOCITY_1, foot_throttle_scaled := 1000, cruise_control_active := FALSE, drive_approval_fw := FALSE, drive_approval_bw := TRUE, current_motor := S_PRESSURE_CHECK_MIN_CURRENT_1, error := S_ERROR_NO_ERROR),
				5((testtime:= 0)),

				(* Test 6 *)
				(testtime:= S_PRESSURE_ERROR_COUNTER_LIMIT, a102 := 4200, a103 := S_PRESSURE_CHECK_TOLERANCE_4201, velocity := S_PRESSURE_CHECK_MIN_VELOCITY_1, foot_throttle_scaled := 0,	cruise_control_active := FALSE,	drive_approval_fw := TRUE,	drive_approval_bw := FALSE, current_motor := S_PRESSURE_CHECK_MIN_CURRENT_1, error := S_ERROR_NO_ERROR),
				(testtime:= S_PRESSURE_ERROR_COUNTER_LIMIT, a102 := 4300, a103 := S_PRESSURE_CHECK_TOLERANCE_4301, velocity := S_PRESSURE_CHECK_MIN_VELOCITY_1, foot_throttle_scaled := 1,	cruise_control_active := FALSE,	drive_approval_fw := TRUE,	drive_approval_bw := FALSE, current_motor := S_PRESSURE_CHECK_MIN_CURRENT_1, error := S_ERROR_NO_ERROR),
				(testtime:= S_PRESSURE_ERROR_COUNTER_LIMIT, a102 := 4300, a103 := S_PRESSURE_CHECK_TOLERANCE_4301, velocity := S_PRESSURE_CHECK_MIN_VELOCITY_1, foot_throttle_scaled := 0,	cruise_control_active := TRUE,	drive_approval_fw := TRUE,	drive_approval_bw := FALSE, current_motor := S_PRESSURE_CHECK_MIN_CURRENT_1, error := S_ERROR_NO_ERROR),
				(testtime:= S_PRESSURE_ERROR_COUNTER_LIMIT, a102 := 4300, a103 := S_PRESSURE_CHECK_TOLERANCE_4301, velocity := S_PRESSURE_CHECK_MIN_VELOCITY_1, foot_throttle_scaled := 0,	cruise_control_active := FALSE,	drive_approval_fw := FALSE,	drive_approval_bw := FALSE, current_motor := S_PRESSURE_CHECK_MIN_CURRENT_1, error := S_ERROR_NO_ERROR),
				(testtime:= S_PRESSURE_ERROR_COUNTER_LIMIT, a102 := 4300, a103 := S_PRESSURE_CHECK_TOLERANCE_4301, velocity := S_PRESSURE_CHECK_MIN_VELOCITY_1, foot_throttle_scaled := 0,	cruise_control_active := FALSE,	drive_approval_fw := TRUE,	drive_approval_bw := FALSE, current_motor := S_PRESSURE_CHECK_MIN_CURRENT_n1, error := S_ERROR_NO_ERROR),
				(testtime:= S_PRESSURE_ERROR_COUNTER_LIMIT, a102 := S_PRESSURE_CHECK_TOLERANCE_4202, a103 := 4201, velocity := S_PRESSURE_CHECK_MIN_VELOCITY_1, foot_throttle_scaled := 0,	cruise_control_active := FALSE,	drive_approval_fw := FALSE,	drive_approval_bw := TRUE, current_motor := S_PRESSURE_CHECK_MIN_CURRENT_n1, error := S_ERROR_NO_ERROR);
END_VAR
VAR
	(* Working variables *)
	fb_s_check_pressure		: s_check_pressure;
	(* Internal used inputs for calls *)
	ptTestVars : POINTER TO Test7_Vars;
END_VAR
(* @END_DECLARATION := '0' *)
(* With this tests we use execution counters as time unit *)

testInit ('Dir_TEST', NoOfTests);

CASE _tls_ OF
	sT_INIT : (* Reset *)
				(* could also be a memory reset of the instance *)
				SysMemSet (ADR(fb_s_check_pressure), 0, SIZEOF(fb_s_check_pressure));
				testParam(pSteps, SIZEOF(Tests_Values)/NoOfTests/SIZEOF(Tests_Values[_tlt_,1]));
				testParam(pWTIME, 5);

	sT_RUN:		(* test run *)
				ptTestVars := ADR(Tests_Values[_tlt_,_tlp_]);
				fb_s_check_pressure(
					a102:= ptTestVars^.a102,
					a103:= ptTestVars^.a103,
					velocity:= ptTestVars^.velocity,
					foot_throttle_scaled:= ptTestVars^.foot_throttle_scaled,
					cruise_control_active:= ptTestVars^.cruise_control_active,
					drive_approval_fw:= ptTestVars^.drive_approval_fw,
					drive_approval_bw:= ptTestVars^.drive_approval_bw,
					current_motor:= ptTestVars^.current_motor,
					execution_counter:= g_execution_counter
				);

				assertEqualsD (	Value1 := fb_s_check_pressure.error,
								Value2 := ptTestVars^.error,
								MaxCnt := 0, Delay := ptTestVars^.testTime);

	sTC_PASS: Pass := TRUE;
END_CASE
END_PROGRAM
